#Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository. 
name: mulesoft-pipeline

#Optional - The name for workflow runs generated from the workflow.
run-name: run by ${{ github.actor }}

#Specifies the trigger for this workflow.
on: workflow_dispatch

jobs:
    #Custom name of the job.
    build:
        env: 
          CLOUDHUB_ENVIRONMENT: "Sandbox" 
          CLOUDHUB_WORKERS: "1"
          CLOUDHUB_WORKER_TYPE: "MICRO"
          CLOUDHUB_REGION: "us-east-2"
          CLOUDHUB_ID: ${{ secrets.CLOUDHUB_ID }}
          CLOUDHUB_SECRET: ${{ secrets.CLOUDHUB_SECRET }}
        permissions:
          packages: write
          contents: write
        #Runner
        runs-on: ubuntu-latest
        steps:
            # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
            - name: Get the code
              uses: actions/checkout@v4

            # Custom action to set up env
            - name: Set up env
              uses: ./.github/actions/mule-env-config

            # Run the tests
            - name: Test the compiled source code
              run: mvn clean test

            # Package
            - name: Build the jar
              run: mvn package -DskipTests   

            # Replace the snapshot version with a release candidate version.
            # Deploy the jar to GitHub registry
            # Build next snapshot version.
            - name: Prepare and perform release              
              run: mvn -B release:prepare release:perform
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Deploy to CloudHub
            - name: Deploy             
              run: |
                mvn -U -V -e -B -DskipTests deploy --file pom.xml -DmuleDeploy \
                -Dconn.app.client.id=${{ env.CLOUDHUB_ID}} \
                -Dconn.app.client.secret=${{ env.CLOUDHUB_SECRET}} \
                -Dcloudhub.environment=${{ env.CLOUDHUB_ENVIRONMENT}} \
                -Dcloudhub.workerType=${{ env.CLOUDHUB_WORKER_TYPE}} \
                -Dcloudhub.workers=${{ env.CLOUDHUB_WORKERS}} \
                -Dcloudhub.region=${{ env.CLOUDHUB_REGION}} \